
SOURCE_FOLDER := ../Source-Files-Folder
OBJECT_FOLDER := ../Object-Files-Folder
BINARY_FOLDER := ../Binary-Files-Folder

ENGINE_FOLDER := $(SOURCE_FOLDER)/Neural-Engine-Folder
MASTER_FOLDER := $(SOURCE_FOLDER)/Neural-Master-Folder

ENGINE_SOURCE := $(ENGINE_FOLDER)/Source-Files-Folder
ENGINE_HEADER := $(ENGINE_FOLDER)/Header-Files-Folder

ENGINE_SOURCES := $(wildcard $(ENGINE_SOURCE)/*.c)
ENGINE_HEADERS := $(wildcard $(ENGINE_HEADER)/*.h)
ENGINE_OBJECTS := $(patsubst $(ENGINE_SOURCE)/%.c, $(OBJECT_FOLDER)/%.o, $(ENGINE_SOURCES))

SOURCE_FILES := $(ENGINE_SOURCES)
HEADER_FILES := $(ENGINE_HEADERS)
OBJECT_FILES := $(ENGINE_OBJECTS)

COMPILE_FLAGS := -Wall -Werror
COMPILE_PRGRM := gcc
COMPILE_LINKS := -lm

BINARY_FILES = neural-network

$(BINARY_FILES): %: $(OBJECT_FOLDER)/%.o $(OBJECT_FILES) $(MASTER_FOLDER)/%.c $(SOURCE_FILES) $(HEADER_FILES)
	$(COMPILE_PRGRM) $(OBJECT_FOLDER)/$@.o $(OBJECT_FILES) $(COMPILE_FLAGS) $(COMPILE_LINKS) -o $@

$(OBJECT_FOLDER)/%.o: $(ENGINE_SOURCE)/%.c $(ENGINE_HEADER)/%.h
	$(COMPILE_PRGRM) $< -c $(COMPILE_FLAGS) -o $@

$(OBJECT_FOLDER)/%.o: $(MASTER_FOLDER)/%.c
	$(COMPILE_PRGRM) $< -c $(COMPILE_FLAGS) -o $@
